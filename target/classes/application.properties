# --- DataSource Configuration for SQLite ---

# 1. JDBC URL for SQLite
# This tells Spring where to find our database file.
# It will create a file named 'car_rental.db' in the root directory of our project.
spring.datasource.url=jdbc:sqlite:car_rental.db

# 2. JDBC Driver Class Name
# This tells Spring which driver to use to connect.
spring.datasource.driver-class-name=org.sqlite.JDBC

# 3. JPA and Hibernate Configuration
# These properties configure how Spring Data JPA interacts with the database.

# This tells JPA what "flavor" of SQL to use. We need a special dialect for SQLite.
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect

# 4. (Optional but useful for development) Show SQL in Console
# This will print every SQL query that Hibernate runs to the console, which is great for debugging.
spring.jpa.show-sql=true

# 5. DDL (Data Definition Language) Auto Configuration
# This tells Hibernate what to do with our database schema (tables, columns, etc.) on startup.
# 'update' means Hibernate will check our Java model classes and automatically add missing tables or columns.
spring.jpa.hibernate.ddl-auto=update
# Change the default server port from 8080 to 8081
server.port=9090